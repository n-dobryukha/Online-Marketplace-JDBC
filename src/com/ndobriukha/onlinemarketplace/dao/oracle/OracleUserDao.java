package com.ndobriukha.onlinemarketplace.dao.oracle;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;

import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.handlers.BeanHandler;
import org.apache.commons.dbutils.handlers.BeanListHandler;

import com.ndobriukha.onlinemarketplace.dao.AbstractJdbcDao;
import com.ndobriukha.onlinemarketplace.dao.PersistException;
import com.ndobriukha.onlinemarketplace.dao.PersistExistsException;
import com.ndobriukha.onlinemarketplace.dbutils.UserRowProcessor;
import com.ndobriukha.onlinemarketplace.models.User;

public class OracleUserDao extends AbstractJdbcDao<User, Integer> {

	public OracleUserDao(Connection connection) {
		super(connection);
	}

	@Override
	public String[] getAutoGeneratedKeys() {
		return new String[] { "id", "fullName", "billingAddress", "login",
				"password", "email" };
	};

	@Override
	public String getSelectQuery() {
		return "SELECT id, fullName, billingAddress, login, password, email FROM Users";
	}

	@Override
	public String getCreateQuery() {
		return "INSERT INTO USERS (fullName, billingAddress, login, password, email) VALUES(?, ?, ?, ?, ?)";
	}

	@Override
	public String getUpdateQuery() {
		return "UPDATE Users SET fullName = ?, billingAddress = ?, login = ?, password = ?, email = ? WHERE id = ?";
	}

	@Override
	public String getDeleteQuery() {
		return "DELETE FROM Users WHERE id = ?";
	}

	public User create(String fullName, String billingAddress, String login, String password, String email) throws PersistException {
		User user = new User(fullName, billingAddress, login, password, email);
		return persist(user, new UserRowProcessor());
	}

	public User getUserByLogin(String login) throws PersistExistsException, PersistException {
		String sql = getSelectQuery() + " WHERE login = ?";
		QueryRunner query = new QueryRunner();
		BeanListHandler<User> beanListHandler = new BeanListHandler<User>(User.class);
		List<User> users = null;
		try {
			users = query.query(connection, sql, beanListHandler, login);
		} catch (SQLException e) {
			throw new PersistException(e);
		}
		if (users == null || users.size() == 0) {
			throw new PersistExistsException("User with login = '" + login + "' doesn't exists");
		}
		if (users.size() > 1) {
			throw new PersistException("Received more than one record.");
		}						
		return users.get(0);
	}
}
