package com.ndobriukha.onlinemarketplace.dao.oracle;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

import org.apache.commons.dbutils.QueryRunner;
import org.apache.commons.dbutils.handlers.BeanListHandler;

import com.ndobriukha.onlinemarketplace.dao.AbstractJdbcDao;
import com.ndobriukha.onlinemarketplace.dao.PersistException;
import com.ndobriukha.onlinemarketplace.dao.PersistExistsException;
import com.ndobriukha.onlinemarketplace.models.Bid;

public class OracleBidDao extends AbstractJdbcDao<Bid, Integer> {

	public OracleBidDao(Connection connection) {
		super(connection, Bid.class);
	}

	@Override
	public String[] getAutoGeneratedKeys() {
		return new String[] { "id", "bidderId", "itemId", "amount" };
	}

	@Override
	public String getSelectQuery() {
		return "SELECT id, bidderId, itemId, amount FROM Bids";
	}

	@Override
	public String getCreateQuery() {
		return "INSERT INTO Bids (bidderId, itemId, amount) VALUES(?, ?, ?)";
	}

	@Override
	public String getUpdateQuery() {
		return "UPDATE Bids SET bidderId = ?, itemId = ?, amount = ? WHERE id = ?";
	}

	@Override
	public String getDeleteQuery() {
		return "DELETE FROM Bids WHERE id = ?";
	}
	
	public Bid create(int bidderId, int itemId, double amount) throws PersistException {
		Bid bid = new Bid(bidderId, itemId, amount);
		return persist(bid);
	}
	
	/**
	 * Retrieves Bids list by ItemId
	 * @param itemId
	 * @return
	 * @throws PersistExistsException
	 * @throws PersistException
	 */
	public List<Bid> getBidsByItemId(int itemId) throws PersistExistsException, PersistException {
		String sql = getSelectQuery() + " WHERE itemId = ?";
		QueryRunner query = new QueryRunner();
		BeanListHandler<Bid> beanListHandler = new BeanListHandler<Bid>(Bid.class);
		List<Bid> result = null;
		try {
			result = query.query(connection, sql, beanListHandler, itemId);
		} catch (SQLException e) {
			throw new PersistException(e);
		}						
		return result;
	}
	
	/**
	 * Retrieves Bids list by ItemId
	 * @param itemId
	 * @return
	 * @throws PersistExistsException
	 * @throws PersistException
	 */
	public Bid getBestBidByItemId(int itemId) throws PersistExistsException, PersistException {
		StringBuilder sqlBuilder = new StringBuilder("SELECT * FROM (");
		sqlBuilder.append(getSelectQuery());
		sqlBuilder.append(" WHERE itemId = ?");
		sqlBuilder.append(" ORDER BY amount DESC, id DESC");
		sqlBuilder.append(") WHERE ROWNUM = 1");
		
		QueryRunner query = new QueryRunner();
		BeanListHandler<Bid> beanListHandler = new BeanListHandler<Bid>(Bid.class);
		List<Bid> result = null;
		try {
			result = query.query(connection, sqlBuilder.toString(), beanListHandler, itemId);
		} catch (SQLException e) {
			throw new PersistException(e);
		}
		if (result == null || result.size() == 0) {
			return null;
		}
		return result.get(0);
	}
}
